import React, { Component } from 'react';
import shouldPureComponentUpdate from 'react-pure-render/function';

export default class MusicNote extends Component {
  shouldComponentUpdate = shouldPureComponentUpdate;

  renderQuarterNote = (x, y, color) => {
    if(y <= 93) {
      return (
        <svg x={x} y={y} style={{ overflow: 'visible' }}>
          <g transform='rotate(180 8 24)'>
            <path fill={color} d='M9.983673 28.250856c3.056256-1.637973 4.684752-4.603095 3.682998-6.833664-1.068533-2.379276-4.740308-3.050748-8.19592-1.498833-3.455605 1.551923-5.392945 4.74246-4.32441 7.121726 1.068542 2.379276 4.740308 3.050748 8.19592 1.498833.215974-.096994.437653-.178867.641413-1.188064z'/>
            <path strokeWidth='1.2' stroke={color} d='M 13.35547,24.05645 L 13.35547,-13.16888' />
          </g>
        </svg>
      );
    }

    return (
      <svg x={x} y={y} style={{ overflow: 'visible' }}>
        <path fill={color} d='M9.983673 28.250856c3.056256-1.637973 4.684752-4.603095 3.682998-6.833664-1.068533-2.379276-4.740308-3.050748-8.19592-1.498833-3.455605 1.551923-5.392945 4.74246-4.32441 7.121726 1.068542 2.379276 4.740308 3.050748 8.19592 1.498833.215974-.096994.437653-.178867.641413-1.188064z'/>
        <path strokeWidth='1.2' stroke={color} d='M 13.35547,24.05645 L 13.35547,-13.16888' />
      </svg>
    );
  };

  renderHalfNote = (x, y, color) => {
    if(y <= 93) {
      return (
        <svg x={x} y={y} style={{ overflow: 'visible' }}>
          <g transform='rotate(180 8 23)'>
            <path fill={color} d='M10.1835 27.7344c3.0564-1.638 4.6845-4.6026 3.6828-6.8328-1.0683-2.3796-4.7403-3.051-8.1954-1.4994-3.456 1.5516-5.391 4.743-4.3236 7.1217 1.0683 2.3805 4.7403 3.051 8.1954 1.5003.216-.0972.4383-.18.6417-.288zm-.999-2.0178c-.216.1125-.4365.1962-.666.2997-2.9466 1.323-5.7915 1.386-6.3513.1386-.5598-1.2447 1.377-3.33 4.3227-4.653 2.9466-1.323 5.7915-1.386 6.3513-.1386.5157 1.1484-1.0935 3.033-3.6558 4.3542z'/>
            <path stroke={color} strokeWidth='1.2' d='M 13.42547,24.05645 L 13.42547,-13.16888' />
          </g>
        </svg>
      );
    }

    return (
      <svg x={x} y={y} style={{ overflow: 'visible' }}>
        <path fill={color} d='M10.1835 27.7344c3.0564-1.638 4.6845-4.6026 3.6828-6.8328-1.0683-2.3796-4.7403-3.051-8.1954-1.4994-3.456 1.5516-5.391 4.743-4.3236 7.1217 1.0683 2.3805 4.7403 3.051 8.1954 1.5003.216-.0972.4383-.18.6417-.288zm-.999-2.0178c-.216.1125-.4365.1962-.666.2997-2.9466 1.323-5.7915 1.386-6.3513.1386-.5598-1.2447 1.377-3.33 4.3227-4.653 2.9466-1.323 5.7915-1.386 6.3513-.1386.5157 1.1484-1.0935 3.033-3.6558 4.3542z'/>
        <path stroke={color} strokeWidth='1.2' d='M 13.42547,24.05645 L 13.42547,-13.16888' />
      </svg>
    );
  };

  renderWholeNote = (x, y, color) => {
    return (
      <svg x={x} y={y} style={{ overflow: 'visible' }}>
        <path fill={color} d='M10.640336 27.872464c-2.7472-.14536-4.893984-2.583936-5.755408-5.105648-.521904-1.480064-.235248-3.700416 1.503456-4.11616 2.519056-.42784 4.609376 1.712016 5.780912 3.759792.83456 1.518832 1.295952 3.91064-.268832 5.114592-.371536.249168-.820672.349104-1.260128.347424zm4.3764-8.645264c-3.09512-1.87984-7.00488-2.026272-10.394128-.97424C2.47568 19.0036.020304 20.600368 0 23.1992c-.001488 2.546336 2.368 4.1348 4.464784 4.891344 3.319504 1.08584 7.149552.990352 10.248832-.74064 1.754368-.933376 3.309328-2.866144 2.782048-5.008416-.289936-1.377552-1.3452-2.40832-2.478928-3.114288z'/>
      </svg>
    );
  };

  renderEighthNote = (x, y, color) => {
    if(y <= 93) {
      return (
        <svg x={x} y={y} style={{ overflow: 'visible' }}>
          <g transform='rotate(180 8 23)'>
            <path fill={color} d='M1.8598 28.92607c-2.79392-2.51014-1.26538-6.59876 3.3466-8.9516C6.74485 19.1896 7.8796 18.8499 9.90928 18.91c1.23112.03155 2.64696.7412 2.64696.7412 0-9.0275-.0341-26.1401-.0341-34.57565.50013.00282.82007-.00324 1.52046-.00324 0 .49628-.00668.8531-.00668 1.293 0 .4287.03017.70705.0716.97646.48433 3.1496 1.1896 4.38945 4.71103 8.28187 4.4536 4.9228 5.74718 7.88798 5.72072 11.82577-.0246 3.69404-3.27397 11.60622-4.01278 11.27795 1.0273-2.768 2.41264-5.75422 2.7811-8.25296.45027-3.0537-.79025-7.36336-2.78667-9.63715-1.6418-1.8699-5.42327-3.54233-6.45477-3.54233 0 0-.0438 18.18614-.0438 25.08115 0 1.18736-1.07562 3.2003-1.68152 3.92405C9.57768 29.60068 4.274 31.09505 1.8598 28.92606z'/>
          </g>
        </svg>
      );
    }

    return (
      <svg x={x} y={y} style={{ overflow: 'visible' }}>
        <path fill={color} d='M1.8598 28.92607c-2.79392-2.51014-1.26538-6.59876 3.3466-8.9516C6.74485 19.1896 7.8796 18.8499 9.90928 18.91c1.23112.03155 2.64696.7412 2.64696.7412 0-9.0275-.0341-26.1401-.0341-34.57565.50013.00282.82007-.00324 1.52046-.00324 0 .49628-.00668.8531-.00668 1.293 0 .4287.03017.70705.0716.97646.48433 3.1496 1.1896 4.38945 4.71103 8.28187 4.4536 4.9228 5.74718 7.88798 5.72072 11.82577-.0246 3.69404-3.27397 11.60622-4.01278 11.27795 1.0273-2.768 2.41264-5.75422 2.7811-8.25296.45027-3.0537-.79025-7.36336-2.78667-9.63715-1.6418-1.8699-5.42327-3.54233-6.45477-3.54233 0 0-.0438 18.18614-.0438 25.08115 0 1.18736-1.07562 3.2003-1.68152 3.92405C9.57768 29.60068 4.274 31.09505 1.8598 28.92606z'/>
      </svg>
    );
  };

  renderSixteenthNote = (x, y, color) => {
    return (
      <svg x={x - 8} y={y - 15} style={{ overflow: 'visible' }}>
        <g transform='scale(0.4)'>
          <path fill={color} d='M23.71961 87.85213c-5.58785-5.02026-2.53077-13.19751 6.69317-17.90321 3.07692-1.56973 5.34644-2.24914 9.40578-2.12895 2.46224.06314 5.29391 1.48242 5.29391 1.48242 0-18.05494-.06821-52.28016-.06821-69.15127 1.00028.00563 1.64015-.00648 3.04094-.00648 0 .99254-.01335 1.7062-.01335 2.58602 0 .85738.06034 1.41406.1432 1.95287.96866 6.29923 2.37919 8.7789 9.42205 16.56374 8.9072 9.84558 11.49436 15.77596 11.44145 23.65154-.04921 7.38807-6.54795 23.21243-8.02557 22.55589 2.05465-5.53599 4.82532-11.50844 5.56223-16.50593.90056-6.10733-1.58049-14.72667-5.57333-19.27425-3.28359-3.73981-10.84654-7.08467-12.90954-7.08467 0 0-.08757 36.37228-.08757 50.16231 0 2.37471-2.15126 6.40059-3.36307 7.84809-5.52631 6.60112-16.13366 9.58986-20.96209 5.25188z'/>
        </g>
      </svg>
    );
  };

  renderNote = (x, y, color) => {
    switch(this.props.note.duration) {
      case 'q':
        return this.renderQuarterNote(x + 1, y, color);
      case 'h':
        return this.renderHalfNote(x + 1, y, color);
      case 'w':
        return this.renderWholeNote(x + 1, y, color);
      case 'e':
        return this.renderEighthNote(x + 1, y, color);
      case 's':
        return this.renderSixteenthNote(x + 1, y, color);
      default:
        return null;
    }
  };

  renderDot = (dotted, x, stringOffset, color) => {
    if(!dotted) {
      return null;
    }
    const y = 119 - (13 * stringOffset);

    return (
      <svg x={x} y={y} width={20} height={20}>
        <circle cx={6.5} cy={10} r={1.5} fill={color} stroke={color} />
      </svg>
    );
  };

  renderTremolo = (tremolo, x, stringOffset, color) => {
    if(!tremolo) {
      return null;
    }
    const y = 100 - (13 * stringOffset);

    return (
      <svg x={x + 1.5} y={y} >
        <g transform='scale(0.30)'>
          <polygon fill={color} points='31.5,7 3.75,21.25 3.75,14.5 31.5,0.25'/>
          <polygon fill={color} points='31.5,19.25 3.75,33.5 3.75,26.75 31.5,12.5'/>
          <polygon fill={color} points='31.5,31.5 3.75,45.75 3.75,39 31.5,24.75'/>
        </g>
      </svg>
    );
  };

  renderVibrato = (vibrato, x, color) => {
    if(!vibrato) {
      return null;
    }

    return (
      <svg x={x + 1.5} y={10}>
        <g transform='scale(8.00, 6.00)'>
          <path fill={color}
             d='M 1.864,0.316 C 1.88,0.292 1.9,0.28 1.928,0.28 c 0.044,0 0.08,0.036 0.08,0.08 0,0.016 -0.004,0.032 -0.012,0.044 C 1.872,0.592 1.748,0.776 1.624,0.964 1.608,0.988 1.584,1 1.556,1 1.532,1 1.512,0.992 1.496,0.972 L 1.104,0.496 0.792,0.964 C 0.776,0.988 0.752,1 0.724,1 0.7,1 0.68,0.992 0.664,0.972 L 0.268,0.496 C 0.228,0.56 0.184,0.62 0.144,0.684 0.128,0.708 0.108,0.72 0.08,0.72 0.036,0.72 0,0.684 0,0.64 0,0.624 0.004,0.608 0.012,0.596 0.136,0.408 0.26,0.224 0.384,0.036 0.4,0.012 0.424,0 0.452,0 0.476,0 0.496,0.008 0.512,0.028 L 0.904,0.504 1.216,0.036 C 1.232,0.012 1.256,0 1.284,0 1.308,0 1.328,0.008 1.344,0.028 L 1.74,0.504 C 1.78,0.44 1.824,0.38 1.864,0.316 Z' />
        </g>
        <g transform='translate(13.0, 0.0)'>
          <g transform='scale(8.00, 6.00)'>
            <path fill={color}
               d='M 1.864,0.316 C 1.88,0.292 1.9,0.28 1.928,0.28 c 0.044,0 0.08,0.036 0.08,0.08 0,0.016 -0.004,0.032 -0.012,0.044 C 1.872,0.592 1.748,0.776 1.624,0.964 1.608,0.988 1.584,1 1.556,1 1.532,1 1.512,0.992 1.496,0.972 L 1.104,0.496 0.792,0.964 C 0.776,0.988 0.752,1 0.724,1 0.7,1 0.68,0.992 0.664,0.972 L 0.268,0.496 C 0.228,0.56 0.184,0.62 0.144,0.684 0.128,0.708 0.108,0.72 0.08,0.72 0.036,0.72 0,0.684 0,0.64 0,0.624 0.004,0.608 0.012,0.596 0.136,0.408 0.26,0.224 0.384,0.036 0.4,0.012 0.424,0 0.452,0 0.476,0 0.496,0.008 0.512,0.028 L 0.904,0.504 1.216,0.036 C 1.232,0.012 1.256,0 1.284,0 1.308,0 1.328,0.008 1.344,0.028 L 1.74,0.504 C 1.78,0.44 1.824,0.38 1.864,0.316 Z' />
          </g>
        </g>
      </svg>
    );
  };

  renderTrill = (trill, x, color) => {
    if(!trill) {
      return null;
    }

    return (
      <svg x={x + 1.5} y={10}>
        <text y={7} style={{ fontSize: 12 }}>tr</text>
        <g transform='translate(11.0, 0.0)'>
          <g transform='scale(8.00, 6.00)'>
            <path fill={color}
               d='M 1.864,0.316 C 1.88,0.292 1.9,0.28 1.928,0.28 c 0.044,0 0.08,0.036 0.08,0.08 0,0.016 -0.004,0.032 -0.012,0.044 C 1.872,0.592 1.748,0.776 1.624,0.964 1.608,0.988 1.584,1 1.556,1 1.532,1 1.512,0.992 1.496,0.972 L 1.104,0.496 0.792,0.964 C 0.776,0.988 0.752,1 0.724,1 0.7,1 0.68,0.992 0.664,0.972 L 0.268,0.496 C 0.228,0.56 0.184,0.62 0.144,0.684 0.128,0.708 0.108,0.72 0.08,0.72 0.036,0.72 0,0.684 0,0.64 0,0.624 0.004,0.608 0.012,0.596 0.136,0.408 0.26,0.224 0.384,0.036 0.4,0.012 0.424,0 0.452,0 0.476,0 0.496,0.008 0.512,0.028 L 0.904,0.504 1.216,0.036 C 1.232,0.012 1.256,0 1.284,0 1.308,0 1.328,0.008 1.344,0.028 L 1.74,0.504 C 1.78,0.44 1.824,0.38 1.864,0.316 Z' />
          </g>
        </g>
      </svg>
    );
  };

  renderSharp = (x, y, color) => {
    return (
      <svg x={x} y={y} style={{ overflow: 'visible' }}>
        <path fill={color} d='M18.906 22.154V17.45l2-.552v4.68l-2 .576zm3.938-1.138l-1.375.394v-4.68l1.374-.384v-1.944l-1.375.384v-4.782h-.564v4.927l-2 .576v-4.65h-.53v4.827L17 16.068v1.948l1.375-.384v4.67L17 22.687v1.94l1.375-.384v4.755h.53v-4.925l2-.55v4.626h.564v-4.8l1.374-.385v-1.947z'/>
      </svg>
    );
  };

  render() {
    const { x, y, fret, color, sharp } = this.props;

    let width = 12;
    if(fret > 9) {
      width += 6;
    }

    return (
      <g>
        { this.renderNote(x, y, color) }
        { sharp ? this.renderSharp(x, y, color) : null }
      </g>
    );
  }
}
